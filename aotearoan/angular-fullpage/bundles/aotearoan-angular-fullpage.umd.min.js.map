{"version":3,"sources":["ng://@aotearoan/angular-fullpage/lib/window-ref/window-ref.service.ts","ng://@aotearoan/angular-fullpage/lib/window-ref/window-ref.module.ts","ng://@aotearoan/angular-fullpage/lib/fullpage/scroll-event.service.ts","ng://@aotearoan/angular-fullpage/lib/fullpage/fullpage.component.ts","ng://@aotearoan/angular-fullpage/lib/fullpage/fullpage.module.ts","ng://@aotearoan/angular-fullpage/lib/fullpage/section.model.ts"],"names":["WindowRefService","prototype","getNativeWindow","window","Injectable","args","providedIn","WindowRefModule","NgModule","providers","ScrollEventService","_this","this","listeners","eventsSubject","Subject","subscription","subscribe","index","Object","keys","forEach","key","scroll","ngOnDestroy","complete","unsubscribe","destroy","addListener","listener","removeListener","next","FullpageComponent","scrollToService","route","router","document","windowRef","scrollEventService","platformLocation","scrollSensitivity","sectionChange","EventEmitter","onPopState","location","reload","ngOnInit","eventListenerKey","onwheel","scrolling","setTimeout","fragment","snapshot","Math","max","sections","findIndex","s","url","switchSections","lockScrolling","sectionIndex","sectionScrolling","invokeScroll","previousSectionIndex","activeSection","classList","remove","activeClass","section","getElementById","add","active","emit","config","target","navigate","pathname","scrollTo","pipe","finalize","scrollingCompleteSensitivity","scrollUp","event","sectionPosition","calcSectionPosition","atSectionTop","preventDefault","activateSectionScrolling","canScroll","canScrollUp","type","scrollDown","atSectionBottom","canScrollDown","length","sectionScrollingTimeout","clearTimeout","checkFocus","ignoreWhenFocused","includes","activeElement","localName","scrollTop","offsetHeight","scrollHeight","fullpageWindowScroll","deltaY","fullpageArrowUpEvent","fullpageArrowDownEvent","fullpageResizeEvent","Component","selector","styles","template","ScrollToService","ActivatedRoute","Router","Inject","DOCUMENT","PlatformLocation","Input","Output","HostListener","FullpageModule","declarations","exports","imports","CommonModule","ScrollToModule","forRoot","SectionModel"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WindowRefService {\n\n  public getNativeWindow() {\n    return window;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { WindowRefService } from './window-ref.service';\n\n@NgModule({\n  providers: [WindowRefService],\n})\nexport class WindowRefModule { }\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class ScrollEventService implements OnDestroy {\n\n  public subscription;\n  public listeners = {};\n  public eventsSubject = new Subject();\n\n  constructor() {\n    this.subscription = this.eventsSubject.subscribe(\n      (index) => {\n        Object.keys(this.listeners).forEach((key) => this.listeners[key].scroll(index));\n      },\n    );\n  }\n\n  public ngOnDestroy() {\n    this.eventsSubject.complete();\n    this.subscription.unsubscribe();\n    this.subscription.destroy();\n    this.listeners = {};\n  }\n\n  public addListener(key: string, listener: IScrollEventListener) {\n    this.listeners[key] = listener;\n  }\n\n  public removeListener(key: string) {\n    if (this.listeners[key]) {\n      delete this.listeners[key];\n    }\n  }\n\n  public scroll(index: number) {\n    this.eventsSubject.next(index);\n  }\n}\n\nexport interface IScrollEventListener {\n  scroll(index: number);\n}\n","import { DOCUMENT, PlatformLocation } from '@angular/common';\nimport { Component, EventEmitter, HostListener, Inject, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ScrollToConfigOptions, ScrollToService } from '@nicky-lenaers/ngx-scroll-to';\nimport { finalize } from 'rxjs/operators';\nimport { WindowRefService } from '../window-ref/window-ref.service';\nimport { IScrollEventListener, ScrollEventService } from './scroll-event.service';\nimport { SectionPositionModel } from './section-position.model';\nimport { SectionModel } from './section.model';\n\n@Component({\n  selector: 'ao-fullpage',\n  styles: [`\n    ::ng-deep .fullpage {\n      display: flex;\n      flex-direction: column;\n      margin: 0;\n    }\n\n    ::ng-deep .fullpage .fullpage-section {\n      width: 100vw;\n      height: 100vh;\n      overflow-y: scroll;\n      overflow-x: hidden;\n    }\n\n    ::ng-deep .fullpage .fullpage-section-fit-content {\n      width: 100vw;\n    }\n\n    ::ng-deep body {\n      padding: 0;\n      margin: 0;\n    }\n\n    ::ng-deep html,\n    ::ng-deep body,\n    ::ng-deep .fullpage-section {\n      -ms-overflow-style: -ms-autohiding-scrollbar;\n    }\n\n    ::ng-deep html::-webkit-scrollbar,\n    ::ng-deep body::-webkit-scrollbar,\n    ::ng-deep .fullpage-section::-webkit-scrollbar {\n      width: 0;\n    }\n  `],\n  template: `\n    <div class=\"fullpage\" *ngIf=\"sections\" [class.scrolling]=\"scrolling\">\n      <ng-content></ng-content>\n    </div>\n  `,\n})\nexport class FullpageComponent implements OnInit, OnDestroy, IScrollEventListener {\n\n  // if focus is on a form input then disable scrolling so that the form is usable\n  public static ignoreWhenFocused = ['textarea', 'input'];\n  public static eventListenerKey = 'fullpage';\n  public static activeClass = 'fullpage-active';\n  public static scrollingCompleteSensitivity = 750;\n\n  public window;\n  public activeSection;\n  public previousSectionIndex: number;\n  public sectionIndex: number;\n  public scrolling: boolean;\n  public sectionScrolling: boolean;\n  public sectionScrollingTimeout;\n\n  @Input() public sections: SectionModel[];\n  @Input() public lockScrolling: boolean;\n  @Input() public scrollSensitivity = 1250;\n  @Output() public sectionChange = new EventEmitter<string>();\n\n  public constructor(private scrollToService: ScrollToService,\n                     private route: ActivatedRoute,\n                     private router: Router,\n                     @Inject(DOCUMENT) private document: any,\n                     private windowRef: WindowRefService,\n                     private scrollEventService: ScrollEventService,\n                     private platformLocation: PlatformLocation) {\n    this.window = windowRef.getNativeWindow();\n    platformLocation.onPopState(() => {\n      this.window.location.reload();\n    });\n  }\n\n  public ngOnInit() {\n    // listen to scroll events from other components\n    this.scrollEventService.addListener(FullpageComponent.eventListenerKey, this);\n\n    // capture all scroll wheel events while scrolling is active (prevents the default action)\n    this.window.onwheel = () => !this.scrolling;\n\n    // needs to happen after rendering\n    setTimeout(() => {\n      const fragment = this.route.snapshot.fragment;\n      const index = Math.max(this.sections.findIndex((s) => s.url === fragment), 0);\n      this.switchSections(index);\n      this.scroll(index);\n    }, 200);\n  }\n\n  public ngOnDestroy() {\n    this.scrollEventService.removeListener(FullpageComponent.eventListenerKey);\n  }\n\n  public scroll(index: number) {\n    if (!this.lockScrolling && index !== this.sectionIndex && !this.sectionScrolling) {\n      this.scrolling = true;\n      this.switchSections(index);\n      this.invokeScroll();\n    }\n  }\n\n  private switchSections(index: number) {\n    this.previousSectionIndex = this.sectionIndex;\n    this.sectionIndex = index;\n\n    if (this.activeSection) {\n      this.activeSection.classList.remove(FullpageComponent.activeClass);\n    }\n\n    const section = this.sections[this.sectionIndex];\n    this.activeSection = this.document.getElementById(section.url);\n\n    if (this.activeSection) {\n      this.activeSection.classList.add(FullpageComponent.activeClass);\n    }\n\n    this.sections.forEach((s) => s.active = s.url === section.url);\n    this.sectionChange.emit(section.url);\n  }\n\n  private invokeScroll() {\n    const section = this.sections[this.sectionIndex];\n    const config: ScrollToConfigOptions = {\n      target: section.url,\n    };\n\n    this.router.navigate([this.window.location.pathname], {fragment: section.url});\n    this.scrollToService.scrollTo(config)\n      .pipe(\n        finalize(() => {\n          setTimeout(() => {\n            this.scrolling = false;\n          }, FullpageComponent.scrollingCompleteSensitivity);\n        }),\n      ).subscribe();\n  }\n\n  public scrollUp(event: Event) {\n    const sectionPosition = this.calcSectionPosition();\n    if (this.lockScrolling) {\n      if (sectionPosition.atSectionTop) {\n        event.preventDefault();\n      } else {\n        // if scrolling sections is locked and we're not at the top of the section - activate section scrolling\n        this.activateSectionScrolling();\n      }\n    } else if (this.canScroll(event) && this.canScrollUp(event, sectionPosition)) {\n      if (this.sectionIndex > 0) {\n        this.scroll(this.sectionIndex - 1);\n      } else if (event.type !== 'wheel') {\n        // prevent default when this is the top section and we are scrolling up\n        event.preventDefault();\n      }\n    } else {\n      this.activateSectionScrolling();\n    }\n  }\n\n  public scrollDown(event: Event) {\n    const sectionPosition = this.calcSectionPosition();\n    if (this.lockScrolling) {\n      if (sectionPosition.atSectionBottom) {\n        event.preventDefault();\n      } else {\n        // if scrolling sections is locked and we're not at the bottom of the section - activate section scrolling\n        this.activateSectionScrolling();\n      }\n    } else if (this.canScroll(event) && this.canScrollDown(event, sectionPosition)) {\n      if (this.sectionIndex < this.sections.length - 1) {\n        this.scroll(this.sectionIndex + 1);\n      } else if (event.type !== 'wheel') {\n        // prevent default when this is the bottom section and we are scrolling down\n        event.preventDefault();\n      }\n    } else {\n      this.activateSectionScrolling();\n    }\n  }\n\n  private activateSectionScrolling() {\n    this.sectionScrolling = true;\n    if (this.sectionScrollingTimeout) {\n      clearTimeout(this.sectionScrollingTimeout);\n    }\n    this.sectionScrollingTimeout = setTimeout(() => {\n      this.sectionScrolling = false;\n      if (this.sectionScrollingTimeout) {\n        clearTimeout(this.sectionScrollingTimeout);\n      }\n    }, this.scrollSensitivity);\n  }\n\n  private canScroll(event: Event) {\n    return event.type !== 'keydown' || this.checkFocus();\n  }\n\n  public checkFocus() {\n    return !FullpageComponent.ignoreWhenFocused.includes(this.document.activeElement.localName);\n  }\n\n  private canScrollUp(event: Event, sectionPosition: SectionPositionModel) {\n    return event.type !== 'wheel' || sectionPosition.atSectionTop;\n  }\n\n  private canScrollDown(event: Event, sectionPosition: SectionPositionModel) {\n    return event.type !== 'wheel' || sectionPosition.atSectionBottom;\n  }\n\n  private calcSectionPosition(): SectionPositionModel {\n    return {\n      atSectionTop: !!this.activeSection && this.activeSection.scrollTop === 0,\n      atSectionBottom: !!this.activeSection &&\n        this.activeSection.offsetHeight + this.activeSection.scrollTop >= this.activeSection.scrollHeight,\n    };\n  }\n\n  @HostListener('window:wheel', ['$event'])\n  public fullpageWindowScroll(event: WheelEvent) {\n    if (!this.scrolling) {\n      if (event.deltaY > 0) {\n        this.scrollDown(event);\n      } else {\n        this.scrollUp(event);\n      }\n    } else {\n      event.preventDefault();\n    }\n  }\n\n  @HostListener('window:keydown.PageUp', ['$event'])\n  @HostListener('window:keydown.ArrowUp', ['$event'])\n  @HostListener('window:keydown.shift.space', ['$event'])\n  public fullpageArrowUpEvent(event: KeyboardEvent) {\n    this.scrollUp(event);\n  }\n\n  @HostListener('window:keydown.PageDown', ['$event'])\n  @HostListener('window:keydown.ArrowDown', ['$event'])\n  @HostListener('window:keydown.space', ['$event'])\n  public fullpageArrowDownEvent(event: KeyboardEvent) {\n    this.scrollDown(event);\n  }\n\n  @HostListener('window:resize')\n  public fullpageResizeEvent() {\n    const section = this.sections[this.sectionIndex];\n    const config: ScrollToConfigOptions = {\n      target: section.url,\n    };\n\n    this.scrollToService.scrollTo(config);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ScrollToModule } from '@nicky-lenaers/ngx-scroll-to';\nimport { WindowRefModule } from '../window-ref/window-ref.module';\nimport { FullpageComponent } from './fullpage.component';\nimport { ScrollEventService } from './scroll-event.service';\n\n@NgModule({\n  declarations: [\n    FullpageComponent,\n  ],\n  exports: [FullpageComponent],\n  imports: [\n    CommonModule,\n    ScrollToModule.forRoot(),\n    WindowRefModule,\n  ],\n  providers: [ScrollEventService],\n})\nexport class FullpageModule { }\n","export class SectionModel {\n  public url: string;\n  public active: boolean;\n}\n"]}